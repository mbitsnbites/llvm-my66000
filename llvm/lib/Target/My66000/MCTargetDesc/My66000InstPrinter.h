//== My66000InstPrinter.h - Convert My66000 MCInst to assembly syntax -*- C++ -*-=//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
///
/// \file
/// This file contains the declaration of the My66000InstPrinter class,
/// which is used to print My66000 MCInst to a .s file.
///
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MY66000_MCTARGETDESC_MY66000INSTPRINTER_H
#define LLVM_LIB_TARGET_MY66000_MCTARGETDESC_MY66000INSTPRINTER_H

#include "llvm/ADT/StringRef.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class My66000InstPrinter : public MCInstPrinter {
public:
  My66000InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                  const MCRegisterInfo &MRI)
    : MCInstPrinter(MAI, MII, MRI) {}

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                 const MCSubtargetInfo &STI) override;
  void printInlineJT8(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printInlineJT16(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printInlineJT32(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printMEMriOperand(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printMEMrrOperand(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printFP32Operand(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printFP64Operand(const MCInst *MI, unsigned opNum, raw_ostream &O);
  void printS16ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS32ImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printCBOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printCCOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
};
} // end namespace llvm

#endif // LLVM_LIB_TARGET_MY66000_MCTARGETDESC_MY66000INSTPRINTER_H
