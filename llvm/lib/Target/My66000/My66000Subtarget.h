//===-- My66000Subtarget.h - Define Subtarget for the My66000 -------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the My66000 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_MY66000_MY66000SUBTARGET_H
#define LLVM_LIB_TARGET_MY66000_MY66000SUBTARGET_H

#include "My66000FrameLowering.h"
#include "My66000ISelLowering.h"
#include "My66000InstrInfo.h"
#include "My66000SelectionDAGInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "My66000GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class My66000Subtarget : public My66000GenSubtargetInfo {
  virtual void anchor();
  My66000FrameLowering FrameLowering;
  My66000InstrInfo InstrInfo;
  My66000RegisterInfo RegInfo;
  My66000TargetLowering TLInfo;
  My66000SelectionDAGInfo TSInfo;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  My66000Subtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const My66000InstrInfo *getInstrInfo() const override {
    return &InstrInfo;
  }
  const My66000FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const My66000TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const My66000SelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const My66000RegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }
};
} // End llvm namespace

#endif
